
2019.02.06
+ add: Gaps items have new Color property

2019.02.04
+ add: event OnChangeModified

2019.02.01
+ add: property EncodingName

2019.01.31
+ add: new object Strings.Bookmarks2 - it holds list of "background bookmarks", which have lower paint priority than usual bookmarks - they are used to colorize entire line w/o placing bookmark on it

2019.01.27
* change: renamed most TATSyn*** objects to TAT*** (e.g. TATSynWrapInfo -> TATWrapInfo)
+ add: objects Attribs/DimRanges now use binary search to find items. Big speedup if lot of items in Attribs.

2019.01.26
* reverted usage of fpTimer, now not used

2019.01.21
+ add: Gaps object allows item before the 1st line, with LineIndex=-1
+ add: Gaps items have prop DeleteOnDelLine

2019.01.20
* change: to fix hanging of timers (by LCL), now on Unix component uses TfpTimer, ie threads. App must enable define UseCThreads (see how it's used in the begin of .lpr file), otherwise you'll get runtime error on start.

2019.01.16
- fix: OptScrollLineCommandsKeepCaretOnScreen worked wrong

2019.01.14
+ add: rework dragging of Minimap's highlighted rect; now it must feel like Sublime

2019.01.13
+ add: OptAutoIndentBetterBracketsCurly (make additional indented line if caret was inside {} )
+ add: OptAutoIndentBetterBracketsRound
+ add: OptAutoIndentBetterBracketsSquare

2019.01.12
- fix: when caret on file end, command "scroll line up" caused caret jump

2019.01.06
+ add: Strings object new method LoadFromStrings()
+ add: Finder has new method DoAction_ExtractAll (for CudaText)

2018.12.31
+ add: smooth (per-pixel) scrolling in editor. Property OptScrollSmooth.
  Seems it don't increase CPU load on scrolling. Also used in middle-mouse-click scrolling, it's smooth too.
+ add: small limit for folded-mark text length made bigger (47->110)

2018.12.28
+ add: prop OptFoldUnderlineOffset (before it was 0, now 3)

2018.12.18
* change: declaration of Strings.OnChange (added param)
+ add: improved Strings internal code for deletion/insertion of many lines

2018.12.02
+ add: reworked Minimap painting, so now it correctly paints spaces/tabs, even if they are inside multiline comments or strings
- fix: fixes for Minimap Tooltip - it must show wrapped lines like editor does

2018.12.01
+ add: Colors.BlockStapleForCaret (if clNone, then color is calculated from Colors.BlockStaple/TextFont)

2018.11.30
* change: renamed props OptShowStapleNNN to OptStapleNNN
+ add: prop OptStapleEdge1, OptStapleEdge2

2018.11.25
+ add: prop UndoAsString
+ add: prop RedoAsString

2018.11.12
+ add: OptShowStapleHiliteActive (highlight deepest block staple containing caret pos)
+ add: OptShowStapleHiliteActiveAlpha (alpha blend value for active staple)

2018.11.11
+ add: property OptUnprintedSpacesBothEnds
+ add: property OptWrapAddSpace (additional number of spaces for wrapped lines)
+ add: property OptScrollbarHorizontalAddSpace (additional number of spaces to show at end of longest line)
+ add: OptWrapMode has new enum value: cWrapAtWindowOrMargin (auto minimal from 2 values)

2018.11.09
- fix: command "Invert Selection" gave redundant carets at begin/end
+ add: don't use empty CodePage name, always fill it with LConvEncoding.GetDefaultTextEncoding

2018.11.07
+ add: event OnCalcTabSize to support Elastic Tabstops

2018.10.28
+ add: property OptSavingTrimFinalEmptyLines

2018.10.20
+ add: new props for caret shape, which allow more tuning:
   CaretPropsNormal
   CaretPropsOverwrite
   CaretPropsReadonly
* deleted: props OptCaretShapeNNNN and type TATSynCaretShape

2018.10.18
+ improved painting speed of minimap

2018.10.10
+ add: instead of OptIgnoreWordChars, added event OnCheckInput
* removed: OptIgnoreWordChars

2018.09.03
+ add: GutterDecor object; see documentation in wiki
* change: changes in Bookmark object API, now it has Data field (where all items placed), sorry, it's to simplify code

2018.08.29
+ add: set Shift+Alt+click to make vertical selection (from 1st caret to click pos) (like in VS Code)

2018.08.18
+ add: detection of UTF16 without BOM (LE/BE)
+ add: global vars (instead of ATStrings props):
    GlobalDetectUtf8BufferKb
    GlobalDetectUtf16BufferWords (2..80)
+ add: on folding range (DoRangeFold), caret(s) is fixed, it is was inside that range
+ add: prop OptCaretFixAfterRangeFolded

2018.08.08
* change: now OnChange not called in LoadFromFile, makes almost no sense

2018.08.06
+ add: Bookmarks object items: added fields Tag (Int64), ShowInBookmarkList (bool)
+ add: methods Bookmark* improved for new fields
+ add: method BookmarkDeleteByTag

2018.08.03
+ add: improved RegExpr unit (similar patch is sent to FreePascal) to support all Unicode word letters in \w

2018.08.02
* deleted deprecated Strings.LinesBm[] prop

2018.07.31
- fix: bug in detecting width of Unicode chars which are "hex"
+ add: detect more Unicode chars as "hex", from Wikipedia "White space characters"

2018.07.23
- fix: OptCaretStopUnfocused didn't have effect for non-blinking caret on focus change

2018.07.07
+ add: commands (from CudaText):
  cCommand_FoldingFoldAtCurLine
  cCommand_FoldingUnfoldAtCurLine
  cCommand_FoldingToggleAtCurLine

2018.07.05
- fix: OnContextPopup was not called

2018.06.12
- fix: tiny mouse moving gave empty selection (from x:y to x:y)

2018.06.09
+ add: public methods
    MarkerClearAll
    MarkerDrop
    MarkerGotoLast
    MarkerSwap

2018.06.07
+ add: public methods
    DoConvertTabsToSpaces
    DoConvertSpacesToTabsLeading
    BookmarkSetForLine
    BookmarkToggleForLine
    BookmarkDeleteForLine
    BookmarkDeleteAll
    BookmarkInvertAll
    BookmarkGotoNext
    BookmarkCopyMarkedLines
    BookmarkDeleteMarkedLines
    BookmarkPlaceBookmarksOnCarets
    BookmarkPlaceCaretsOnBookmarks

2018.06.03
+ add: method DoCaretsFixIfAfterLineEnds
+ add: used new method in Trim Spaces actions

2018.05.09
+ add: can render syntax hilited text with several fonts: added props FontItalic, FontBold, FontBoldItalic

2018.05.07
+ add: Bookmarks have prop DeleteOnDelLine (bool)

2018.05.04
+ add: implemented tooltips over folded region marks, ie [...] marks
+ add: OptFoldTooltipVisible (true by default)
+ add: OptFoldTooltipLineCount
+ add: OptFoldTooltipWidthPercents

2018.04.22
+ add: cCommand_ScrollToBegin
+ add: cCommand_ScrollToEnd
+ add: cCommand_ScrollPageUp
+ add: cCommand_ScrollPageDown

2018.04.18
+ add: event OnClickLink
+ add: OptMouseClickOpensURL
+ add: OptKeyTabIndentsVerticalBlock (default false, was true)

2018.04.13
+ add: global options for Unicode full-width chars, unit ATSynEdit_CharSizer:
    OptCharSizeProportional
    OptCharSizeWideAllowed
    OptCharScaleFullWidth
    OptCharFillWidth_Range1_begin
    OptCharFillWidth_Range1_end
    OptCharFillWidth_Range2_begin
    OptCharFillWidth_Range2_end
    OptCharFillWidth_Range3_begin
    OptCharFillWidth_Range3_end

2018.04.08
+ add: used Hi-dpi resource icons (for foldbar context menu, for mouse middle click), by FTurtle

2018.04.07
+ add: IsCharWord() func uses UnicodeData now, works for all international letters

2018.04.06
+ add: new resource PNG file for "mouse middle click scroll" feature
+ add: better resource make scripts

2018.04.04
+ add: Gaps.OnDelete event
+ add: TATSynGapItem.Control field

2018.04.03
+ add: to support inline editors (like Adobe Brackets), added method DoGetGapRect

2018.04.02
+ add: part of code separated to ATSynEdit_CharSizer unit
+ add: in CharSizer unit, added global option for proportional font rendering (proportional for char codes >127), it fixes wrong width of many Unicode characters

2018.03.11
+ add: minimap tooltip: it shows several lines for mouse cursor pos, when mouse is over minimap
+ add: prop OptMinimapTooltipVisible
+ add: prop OptMinimapTooltipLinesCount
+ add: prop OptMinimapTooltipWidthPercents
+ add: prop Colors.MinimapTooltipBG
+ add: prop Colors.MinimapTooltipBorder

2018.03.10
+ add: Ctrl+click must call context menu on macOS
* deleted prop OptMouseDownForPopup, code made simpler

2018.03.06
+ improved logic of CaretItem.SavedX field (field is also renamed), to be like in SynWrite and tested on CudaText

2018.02.27
+ add: prop OptScrollbarHorizontalHidden
- fix: can write LineTop for hidden control too
- fix: major fix for IME input

2018.02.06
+ rewritten bookmarks support. now bookmarks are not embedded into Strings items, they are in separate Strings.Bookmarks object. now bookmarks aren't deleted if their lines are deleted - good.
+ smaller size of Strings item
+ added unit atsynedit_bookmarks
* deleted unit atstrings_hints 
* deprecated Strings.LinesBm[]
* deleted Strings.LinesHint[]

2018.01.31
- fix: stupid bug (fix: char->widechar) in detect pixel width of CJK text
+ add: prop OptMaxLineLengthForSlowWidthDetect (500)

2018.01.29
- fix commands "extend carets up/down..."- must consider tab-chars

2018.01.25
+ allow OptIndentSize value 0: it uses OptTabSize, OptTabSpaces

2018.01.23
+ call OnHotspotExit on mouse leave, on scrolling, on command

2018.01.21
+ consider zero-width-space char U+200B

2018.01.19
+ added Hotspots object, see wiki description about it
+ added events OnHotspotEnter, OnHotspotExit
* on macOS, Command-key is used instead of Ctrl-key (in features with Ctrl press)

2018.01.12
+ Ctrl+(double click) now _adds_ caret with word
+ finder: add DoAction_FindSimple()
- finder: fixed search for find-str with trailing LF (if multi-line input used)

2018.01.10
+ many optimizations for texts with huge lines (tested on file with 4M line len)
+ ATStrings: added method LineSub (faster than Strings.Lines[i]+Copy)
* ATStrings: increased size of TATStringItem by Longint, sorry
* ATStringProc: renamed several props, added prefix Opt
* ATStringProc: renamed OptHexCharsUser to OptHexChars
* ATStringProc: changed logic of OptHexCharsDefault, don't add strings OptHexChars+OptHexCharsDefault in each call of IsCharHex (faster)

2018.01.08
+ don't calc URLs in too long lines. property OptMaxLineLenToCalcURL=300
+ add global option OptAllowSpecialWidthChars (to disable rendering of 170% width chars)
+ add {$ifdef at_show_scroll_info} (to debug)

2017.12.30
+ use fast TFPSList.DeleteRange in Strings.TextDeleteRange to fast del big block w/o using undo
+ use local copy of FPC's fgl.pp as atsynedit_fgl.pas

2017.12.14
* change declaration of TATFinderProgress

2017.12.11
+ change storage of WrapInfo items to generic list TFPGList
+ optimized ATStrings item size

2017.12.09
* delete function SCommentLineAction, better do it in user app
+ optimized by adding prop Strings.LinesUTF8[]
+ optimized Strings.TextDeleteRange, do fast delete block, no undo, if block is too big
+ big rewrite of ATStrings storage using generic list TFPSList

2017.12.07
+ support new Laz API (trunk) OnMouseWheelHorz

2017.12.04
+ optimized ATStrings item size (bitpacked record)
+ change storage ATStrings to generic list

2017.11.26
- fix: if tab-char exists at line start, column selection was wrong

2017.11.24
+ add func SClipboardCopy; fix it for LCL GTK2 bug with trailing zero

2017.11.14
+ finder: usual (non regex) search engine rewritten totally, don't use StringBuffer, fast

(older log: only in github)
